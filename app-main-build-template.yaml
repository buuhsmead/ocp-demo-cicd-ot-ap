apiVersion: v1
kind: Template
metadata:
  name: ${APP_NAME}-build-deploy-template
labels:
  app: ${APP_NAME}
objects:
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        build: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: app-main:latest
      postCommit: {}
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 256Mi
      runPolicy: Serial
      source:
        binary: {}
        type: Binary
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: openjdk18-openshift:latest
        type: Source
      successfulBuildsHistoryLimit: 5
      triggers:
        - github:
            secret: ${GITHUB_SECRET}
          type: GitHub
        - generic:
            secret: ${SCM_GENERIC}
          type: Generic

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${APP_NAME}-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_SIZE}
      storageClassName: ${STORAGE_CLASS}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      name: ${APP_NAME}
    spec:
      lookupPolicy:
        local: false
      tags:
        - from:
            kind: DockerImage
            name: ${APP_NAME}
          generation: 2
          importPolicy: {}
          name: latest
          referencePolicy:
            type: Source

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        application: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      selector:
        app: ${APP_NAME}
      ports:
        - protocol: TCP
          port: 8080
          targetPort: 8080
      type: ClusterIP

  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        application: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      to:
        kind: Service
        name: ${APP_NAME}
        weight: 100
      wildcardPolicy: None

  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
      strategy:
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: ${APP_NAME}
            deploymentconfig: ${APP_NAME}
        spec:
          containers:
            - env:
                - name: SCRIPT_DEBUG
                  value: 'true'
              image: ${APP_NAME}
              imagePullPolicy: IfNotPresent
              name: ${APP_NAME}
              resources:
                limits:
                  cpu: 500m
                  memory: 1Gi
                requests:
                  cpu: 250m
                  memory: 256Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /data
                  name: ${APP_NAME}-volume
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: ${APP_NAME}-volume
              persistentVolumeClaim:
                claimName: ${APP_NAME}-data
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${APP_NAME}
            from:
              kind: ImageStreamTag
              name: ${APP_NAME}:latest
          type: ImageChange

parameters:
  - description: name of the app
    name: APP_NAME
    required: true
  - description: size of the volume
    name: VOLUME_SIZE
    value: 1Mi
    required: true
  - description : name of the storageclass
    name: STORAGE_CLASS
    value: glusterfs-ocs
    required: true
  - description: valu for github secret
    name: GITHUB_SECRET
    from: '[A-Z0-9]{8}'
    generate: expression
  - description: valu for generic scm secret
    name: SCM_GENERIC
    from: '[A-Z0-9]{8}'
    generate: expression